{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","visibleTodos","props","todos","query","handleSelectChange","event","target","value","setState","filter","todo","completed","filterList","title","toLowerCase","includes","prevProps","this","getVisible","searchedTodos","className","type","placeholder","onChange","map","checked","readOnly","userId","selectedUserId","onClick","selectedUser","id","React","Component","getData","url","fetch","then","response","json","CurrentUser","user","errorMessage","getUser","a","clearUser","name","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3ea5435.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectedUserId: number,\n  selectedUser: (id: number) => void\n};\n\ntype State = {\n  visibleTodos: Todo[],\n  query: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    visibleTodos: this.props.todos,\n    query: '',\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.todos !== this.props.todos) {\n      this.getVisible();\n    }\n  }\n\n  getVisible() {\n    this.setState({ visibleTodos: this.props.todos });\n  }\n\n  handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case ('active'):\n        this.setState(({\n          visibleTodos: this.props.todos.filter(todo => !todo.completed),\n        }));\n        break;\n      case ('completed'):\n        this.setState(({\n          visibleTodos: this.props.todos.filter(todo => todo.completed),\n        }));\n        break;\n      default:\n        this.setState({ visibleTodos: this.props.todos });\n    }\n  };\n\n  filterList = () => {\n    return (\n      this.state.visibleTodos.filter(todo => (\n        todo.title.toLowerCase().includes(this.state.query.toLowerCase())\n      ))\n    );\n  };\n\n  render() {\n    const { query } = this.state;\n    const searchedTodos = this.filterList();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>\n          Todos:\n        </h2>\n        <div className=\"TodoList__search\">\n          <span>\n            Filter Todos By Title:\n          </span>\n          <div className=\"TodoList__form\">\n            <input\n              className=\"TodoList__input\"\n              type=\"text\"\n              placeholder=\"enter title to search\"\n              value={query}\n              onChange={event => this.setState({ query: event.target.value })}\n            />\n\n            <select\n              className=\"TodoList__input\"\n              onChange={this.handleSelectChange}\n            >\n              <option value=\"all\">\n                all\n              </option>\n\n              <option value=\"active\">\n                active\n              </option>\n\n              <option value=\"completed\">\n                completed\n              </option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {searchedTodos.map(todo => {\n              return (\n                <li\n                  key={todo.id}\n                  className={todo.completed\n                    ? 'TodoList__item TodoList__item--checked'\n                    : 'TodoList__item TodoList__item--unchecked'}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n\n                  <p>\n                    {todo.title}\n                  </p>\n\n                  <button\n                    className={todo.userId === this.props.selectedUserId\n                      ? 'TodoList__user-button--selected button'\n                      : 'TodoList__user-button button'}\n                    type=\"button\"\n                    onClick={() => this.props.selectedUser(todo.userId)}\n                  >\n                    {`User #${todo.userId}`}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nexport function getData(url: string) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getData } from '../../api/api';\n\ntype Props = {\n  userId: number;\n  clearUser: () => void;\n};\n\ntype State = {\n  user: User | null;\n  errorMessage: string;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    if (this.props.userId !== 0) {\n      this.getUser();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getUser();\n    }\n  }\n\n  getUser = async () => {\n    try {\n      const user = await getData(`users/${this.props.userId}`);\n\n      this.setState({ user, errorMessage: '' });\n    } catch (e) {\n      this.setState({ user: null, errorMessage: 'I don\\'t know where this user is)0' });\n    }\n  };\n\n  render() {\n    const { user, errorMessage } = this.state;\n    const { userId, clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${userId}`}\n          </span>\n        </h2>\n\n        {user ? (\n          <div className=\"CurrentUser__info\">\n            <h3 className=\"CurrentUser__name\">\n              {user.name}\n            </h3>\n\n            <p className=\"CurrentUser__email\">\n              {user.email}\n            </p>\n\n            <p\n              className=\"CurrentUser__phone\"\n            >\n              {user.phone}\n            </p>\n\n            <button\n              className=\"CurrentUser__button button\"\n              type=\"button\"\n              onClick={clearUser}\n            >\n              Clear\n            </button>\n          </div>\n        ) : (\n          <p className=\"CurrentUser__error\">\n            {errorMessage}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getData } from './api/api';\n\ninterface State {\n  todos: Todo[];\n  selectedUserId: number;\n  errorMessage: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n    errorMessage: '',\n  };\n\n  async componentDidMount() {\n    try {\n      const todos = await getData('/todos');\n\n      this.setState({ todos });\n    } catch {\n      this.setState({ errorMessage: 'I don\\'t know where this page is)0' });\n    }\n  }\n\n  selectedUser = (id: number) => {\n    this.setState({ selectedUserId: id });\n  };\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { selectedUserId, todos, errorMessage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectedUserId={selectedUserId}\n            todos={todos}\n            selectedUser={this.selectedUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : <p>{ errorMessage }</p>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}